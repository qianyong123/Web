import React, { PureComponent } from 'react'
import { Input, Select, Button, Form } from 'antd'

const { Option } = Select
const FormItem = Form.Item
@Form.create()
/**
 *@Date:2020/4/23
 *@Features: 预警监测页面filter页面
 */
class Filter extends PureComponent {

  handleSearch = e => {
    e.preventDefault()

    const { form, onSearch } = this.props

    form.validateFields((err, fieldsValue) => {
      if (err) return
      const values = {
        ...fieldsValue,
        // updatedAt: fieldsValue.updatedAt && fieldsValue.updatedAt.valueOf()
      }
      onSearch(values)
      // eslint-disable-next-line no-console
    })
  }

  handleReset = () => {
    const { form, resetForm } = this.props

    form.resetFields()
    resetForm()
  }

  render() {
    const {
      form: { getFieldDecorator }, names, types,
    } = this.props

    const formItemLayout = {
      layout: 'inline',
      labelAlign: 'left',
    }


    return (
      <div>
        <Form onSubmit={this.handleSearch} {...formItemLayout}>
          {/* <Form.Item  > */}          {/* {getFieldDecorator('surveyYear') ( */}          {/* <Selec t */}          {/* placeholder="一级指标类型 " */}          {/* onSelect={this.onLoadMonitorDevListData } */}          {/* style={{ width: '150px' } } */}          {/* allowClea r */}          {/* > */}          {/* <Option value={1}>1</Option > */}          {/* </Select > */}          {/* ) } */}
          {/* </Form.Item > */}

          <FormItem>
            {getFieldDecorator('year')(
              <Select
                style={{ width: '160px' }}
                placeholder="请选择年份"
              >
                <Option value={2020}>2020</Option>
              </Select>
            )}
          </FormItem>

          <FormItem>
            {getFieldDecorator('animalName')(
              <Select
                style={{ width: '160px' }}
                placeholder="请选择物种名称"
              >
                {names.map(item => (
                  <Option value={item} key={item}>{item}</Option>
                ))}
              </Select>
            )}
          </FormItem>

          <FormItem>
            {getFieldDecorator('type')(
              <Select
                style={{ width: '160px' }}
                placeholder="请选择指标分类"
              >
                {types.map(item => (
                  <Option value={item} key={item}>{item}</Option>
                ))}
              </Select>
            )}
          </FormItem>

          <FormItem>
            {getFieldDecorator('riskGrade')(
              <Select
                style={{ width: '160px' }}
                placeholder="请选择评价结果"
              >
                <Option value='无危'>无危</Option>
                <Option value='近危'>近危</Option>
                <Option value='低危'>低危</Option>
                <Option value='易危'>易危</Option>
                <Option value='濒危'>濒危</Option>
                <Option value='极危'>极危</Option>
              </Select>
            )}
          </FormItem>

          <FormItem>
            <Button icon="search" type="primary" htmlType="submit">
              查询
            </Button>
            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>
              重置
            </Button>
          </FormItem>
        </Form>
      </div>
    )
  }
}

export default Filter
