import React, { Component } from 'react'
import { connect } from 'dva'
import { Layout, Button, Modal, message, Card, BackTop } from 'antd'
import { getTableFiltersValue } from '@/utils/utils'
import Authorized from '@/utils/Authorized'
import globalStyles from '@/global.less'
import Filter from './Filter'
import TableList from './Table'
import FormComp from './Form'
import Download from '@/components/Download'

const { Content } = Layout

@connect(({ evaluationSpeciesChangeTrendsprotected, loading }) => {
  return {
    evaluationSpeciesChangeTrendsprotected,
    listLoading: loading.effects['evaluationSpeciesChangeTrendsprotected/fetch'],
    // submitLoading: loading.effects['dataAuditing/add'] || loading.effects['dataAuditing/update'],
  }
})

/**
 *@Date:2020/4/23
 *@Features: 预警监测页面
 */
class IndexClassification extends Component {
  constructor(props) {
    super(props)
    const { selectedIds } = props
    this.state = {
      selectedRows: selectedIds,
      names: [],//物种名称
      types: [],//指标分类
      exportParams: {},
      modal: {
        item: {},
        modalType: 'new',
        modalVisible: false,
      },
    }
  }

  componentDidMount() {
    const { dispatch } = this.props
    this.requestData()
    dispatch({
      type: 'evaluationSpeciesChangeTrendsprotected/fetchName',
      payload: {},
      callback: (data) => {
        this.setState({ names: data })
      }
    })
    dispatch({
      type: 'evaluationSpeciesChangeTrendsprotected/fetchType',
      payload: {},
      callback: (data) => {
        this.setState({ types: data })
      }
    })
  }

  requestData = (params = {}) => {
    const { dispatch } = this.props
    dispatch({
      type: 'evaluationSpeciesChangeTrendsprotected/fetch',
      payload: {
        pageSize: 10,
        pageNo: 1,
        ...params,
      },
    })
    this.setState({ exportParams: params })
  }

  handleStandardTableChange = (pagination, filtersArg, sorter) => {  // 分页
    const { filterFormValues } = this.state
    const filters = getTableFiltersValue(filtersArg)

    // console.log(pagination)
    const params = {
      // pageNo: (pagination.current - 1) * pagination.pageSize,
      pageNum: pagination.current,
      pageNo: pagination.current,
      pageSize: pagination.pageSize,
      ...filterFormValues,
      ...filters,
    }
    if (sorter.field) {
      params.sorter = `${sorter.field}_${sorter.Refund}`
    }

    this.requestData(params)
  }

  handleModalVisible = (visible = {}, type, data, target) => {
    const modalProps =
      typeof visible === 'boolean'
        ? {
          modalVisible: visible,
          modalType: type,
          item: data,
          modalTarget: target,
        }
        : { ...visible }

    const { modalVisible, modalType, item, modalTarget = 'modal' } = modalProps

    this.setState(() => ({
      [`${modalTarget}`]: {
        modalVisible: modalVisible || false,
        modalType: modalType || 'new',
        item: item || {},
      },
    }))
  }

  handleSearch = (value) => {
    this.requestData(value)
  }
  handleFormReset = () => {
    this.requestData()
  }

  handleFormSubmit = (id, values) => {
    console.log(values)
    // if (id) {
    //   this.handleUpdate({ id, ...values })
    // } else {
    //   this.handleAdd(values)
    // }
  }

  render() {
    const { selectedRows, modal, names, types, exportParams } = this.state
    const { selectedMode, listLoading, submitLoading, evaluationSpeciesChangeTrendsprotected: { data } } = this.props

    return (
      <div>
        <Layout>
          <Card bordered={false} style={{ marginBottom: 20 }}>
            <Filter
              onSearch={this.handleSearch}
              resetForm={this.handleFormReset}
              names={names}
              types={types}
            />
          </Card>
          <Card bordered={false}>
            <div style={{ marginBottom: 5 }}>
              <span>共有<b>{data.pagination.total}</b>条信息，共<b>{Math.ceil(data.pagination.total / data.pagination.pageSize) || 0}</b>页</span>
              <div style={{ float: 'right', marginBottom: 10 }}>
                <Download action="/fdnpm/trendAnalysis/export" method="GET" params={exportParams} >
                  {options =>
                    <Button
                      type="primary"
                      icon="export"
                      className={globalStyles.button}
                      // style={{ background: '#eee', border: '1px solid #008f5f', color: '#008f5f' }}
                      {...options}
                    >
                      导出
                </Button>
                  }
                </Download>
              </div>
            </div>
            <TableList
              selectedMode={false}
              selectedRows={false}
              rowSelection={false}
              loading={listLoading}
              data={data}
              // onSelectRow={this.handleSelectRows}
              onChange={this.handleStandardTableChange}
              onDelete={this.handleDelete}
              onEdit={this.handleEdit}
              onSendUp={this.handleSendUp}
              onBackMsg={this.handleBackMsg}
              onView={this.handleView}
            // onReset={this.handleReset}
            // onSwitch={this.handleSwitch}
            />
          </Card>
        </Layout>

        <FormComp //新建&编辑Modal
          title={modal.modalType === 'new' ? '数据指标维护新增' : '数据指标维护编辑'}
          {...modal}
          loading={submitLoading}
          onCancelClick={() => this.handleModalVisible(false)}
          submitForm={this.handleFormSubmit}
        />
      </div>)
  }
}

export default IndexClassification