import React, { Component } from 'react'
import { connect } from 'dva'
import { Layout, Button, Modal, message, Card, BackTop } from 'antd'
import { getTableFiltersValue } from '@/utils/utils'
import Authorized from '@/utils/Authorized'
import globalStyles from '@/global.less'
import Filter from './Filter'
import TableList from './Table'
import FormComp from './Form'
import ViewComp from './View'

const { Content } = Layout

@connect(({ ThresholdSet, loading }) => {
  return {
    ThresholdSet,
    listLoading: loading.effects['ThresholdSet/fetch'],
    submitLoadingsubmitLoading:
      loading.effects['ThresholdSet/add'] || loading.effects['ThresholdSet/update'],
  }
})

/**
 *@Date:2020/4/23
 *@Features: 预警监测页面
 */
class ThresholdSet extends Component {
  constructor(props) {
    super(props)
    const { selectedIds } = props
    this.state = {
      selectedRows: selectedIds,
      modal: {
        item: {},
        modalType: 'new',
        modalVisible: false,
      },
      viewModal: {
        item: {},
        modalType: 'view',
        modalVisible: false,
      },
    }
  }

  componentDidMount() {
    this.requestTableList()
    this.requestNeedList()
  }

  // 获取table数据
  requestTableList = (params = {}) => {
    const { dispatch } = this.props
    dispatch({
      type: 'ThresholdSet/fetch',
      payload: {
        pageSize: 10,
        pageNo: 1,
        ...params,
      },
    })
  }
  // 获取下拉的数据
  requestNeedList = () => {
    const { dispatch } = this.props
    dispatch({
      type: 'ThresholdSet/fetchNameList',
      payload: {},
    })
    dispatch({
      type: 'ThresholdSet/fetchTypeList',
      payload: {},
    })
  }

  handleModalVisible = (visible = {}, target, data = {}, type = 'new') => {
    const modalProps =
      typeof visible === 'boolean'
        ? {
            modalVisible: visible,
            modalType: type,
            item: data,
            modalTarget: target,
          }
        : { ...visible }

    const { modalVisible, modalType, item, modalTarget = 'modal' } = modalProps

    this.setState(() => ({
      [`${modalTarget}`]: {
        modalVisible: modalVisible || false,
        modalType: modalType || 'new',
        item: item || {},
      },
    }))
  }

  //搜索
  handleSearch = (values = {}) => {
    this.setState({
      filterFormValues: values,
    })
    this.requestTableList({ ...values })
  }
  //重置
  handleFormReset = () => {
    this.setState({
      filterFormValues: {},
    })
    this.requestTableList()
  }
  handleFormSubmit = (id, values) => {
    console.log(values)
    // if (id) {
    //   this.handleUpdate({ id, ...values })
    // } else {
    //   this.handleAdd(values)
    // }
  }
  //表格分页函数
  handleStandardTableChange = (pagination, filtersArg, sorter) => {
    const { filterFormValues } = this.state
    const filters = getTableFiltersValue(filtersArg)
    const params = {
      pageNo: pagination.current,
      pageSize: pagination.pageSize,
      ...filterFormValues,
      ...filters,
    }

    if (sorter.field) {
      params.sorter = `${sorter.field}_${sorter.Refund}`
    }

    this.requestTableList(params)
  }
  handleModalViewVisible = (flag, item) => {
    this.handleModalVisible(false, 'viewModal')
  }
  handleView = id => {
    const { dispatch } = this.props
    dispatch({
      type: 'ThresholdSet/fetchFind',
      payload: { trendAnalysisId: id },
      callback: data => {
        this.handleModalViewVisible(true, 'viewModal', data)
      },
    })
  }
  render() {
    const { selectedRows, modal, viewModal } = this.state
    const {
      selectedMode,
      listLoading,
      submitLoading,
      ThresholdSet: { data, nameList, typeList },
    } = this.props
    // console.log(nameList, typeList)

    return (
      <div>
        <Layout>
          <Card bordered={false} style={{ marginBottom: 20 }}>
            <Filter
              onSearch={this.handleSearch}
              resetForm={this.handleFormReset}
              nameList={nameList}
              typeList={typeList}
            />
          </Card>
          <Card bordered={false}>
            <div style={{ marginBottom: 5 }}>
              <span>
                共有<b>{data.pagination.total}</b>条信息，共
                <b>{Math.ceil(data.pagination.total / data.pagination.pageSize) || 0}</b>页
              </span>
              <Button
                icon="plus"
                className={globalStyles.button}
                onClick={() => this.handleModalVisible(true)}
                style={{ background: '#ee9800', color: '#fff', float: 'right', marginBottom: 20 }}
              >
                新增指标
              </Button>
            </div>
            <TableList
              selectedMode={false}
              selectedRows={false}
              rowSelection={null}
              loading={listLoading}
              data={data}
              // onSelectRow={this.handleSelectRows}
              // onChange={this.handleStandardTableChange}
              onDelete={this.handleDelete}
              onEdit={this.handleEdit}
              onSendUp={this.handleSendUp}
              onBackMsg={this.handleBackMsg}
              onView={this.handleView}
              // onReset={this.handleReset}
              // onSwitch={this.handleSwitch}
            />
          </Card>
        </Layout>

        <FormComp //新建&编辑Modal
          title={modal.modalType === 'new' ? '阈值参数设置' : '数据指标维护编辑'}
          {...modal}
          loading={submitLoading}
          onCancelClick={() => this.handleModalVisible(false)}
          submitForm={this.handleFormSubmit}
          nameList={nameList}
          typeList={typeList}
        />
        <ViewComp
          title="数据审核详情"
          {...viewModal}
          onCancelClick={() => this.handleModalViewVisible(false)}
        />
      </div>
    )
  }
}

export default ThresholdSet
