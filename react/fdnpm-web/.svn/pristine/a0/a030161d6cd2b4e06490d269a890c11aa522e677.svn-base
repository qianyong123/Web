import React, { Component } from 'react'
import { connect } from 'dva'
import { Layout, Button, Modal, message, Card, BackTop } from 'antd'
import { getTableFiltersValue } from '@/utils/utils'
import Authorized from '@/utils/Authorized'
import styles from './index.less'
import globalStyles from '@/global.less'
import Filter from './Filter'
import TableList from './Table'
import FormComp from './Form'
import View from './Views'

const { Content } = Layout

@connect(({ mainlyProtectedSpecies, loading }) => {
  return {
    mainlyProtectedSpecies,
    listLoading: loading.effects['mainlyProtectedSpecies/fetch'],
    addBtnLoading: loading.effects['mainlyProtectedSpecies/add'] || loading.effects['mainlyProtectedSpecies/update'],
  }
})
  /**
   *@Features: 主要保护物种信息
   */
class MainlyProtectedSpecies extends Component {
  constructor(props) {
    super(props)
    const { selectedIds } = props
    this.state = {
      selectedRows: selectedIds,
      modal: {
        item: {},
        modalType: 'new',
        modalVisible: false,
      },
      viewModal: {
        item: {},
        modalType: 'view',
        modalVisible: false,
      },
      filterFormValues: {},
    }
  }

  componentDidMount() {
    this.requestList()
    this.fetchChinaProtectLevel()
    this.fetchIucnRank()
  }

  requestList = (params = {}) => {
    const { dispatch } = this.props
    dispatch({
      type: 'mainlyProtectedSpecies/fetch',
      payload: {
        pageSize: 10,
        pageNum: 1,
        ...params,
      },
    })
  }

  // 中国保护等级
  fetchChinaProtectLevel = () => {
    const { dispatch } = this.props
    dispatch({
      type: 'mainlyProtectedSpecies/fetchChinaProtectLevel',
    })
  }

  // 中国保护等级
  fetchIucnRank = () => {
    const { dispatch } = this.props
    dispatch({
      type: 'mainlyProtectedSpecies/fetchIucnRank',
    })
  }

  handleModalVisible = (visible = {}, type, data, target) => {
    const modalProps =
      typeof visible === 'boolean'
        ? {
          modalVisible: visible,
          modalType: type,
          item: data,
          modalTarget: target,
        }
        : { ...visible }

    const { modalVisible, modalType, item, modalTarget = 'modal' } = modalProps

    this.setState(() => ({
      [`${modalTarget}`]: {
        modalVisible: modalVisible || false,
        modalType: modalType || 'new',
        item: item || {},
      },
    }))
  }

  handleSearch = (values) => {
    this.setState({
      filterFormValues: values,
    })

    this.requestList(values)
  }

  handleFormReset = () => {
    this.setState({
      filterFormValues: {},
    })

    this.requestList()
  }

  handleStandardTableChange = (pagination, filtersArg, sorter) => {
    const { filterFormValues } = this.state

    const filters = getTableFiltersValue(filtersArg)

    const params = {
      // pageNum: (pagination.current - 1) * pagination.pageSize,
      pageNum: pagination.current,
      pageSize: pagination.pageSize,
      ...filterFormValues,
      ...filters,
    }
    if (sorter.field) {
      params.sorter = `${sorter.field}_${sorter.Refund}`
    }

    this.requestList(params)
  }

  /**
   *@Features: 添加或者更新
   */
  handleFormSubmit = (id, values) => {
    // console.log(values)
    if (id) {
      this.handleUpdate({ id, ...values })
    } else {
      this.handleAdd(values)
    }
  }

  // update
  handleUpdate = (values) => {
    const { dispatch } = this.props
    dispatch({
      type: 'mainlyProtectedSpecies/update',
      payload: values,
      callback: () => {
        message.success('修改成功')
        this.handleModalVisible(false)
        this.requestList()
      },
    })
  }

  handleAdd = values => {
    const { dispatch } = this.props
    dispatch({
      type: 'mainlyProtectedSpecies/add',
      payload: values,
      callback: () => {
        message.success('添加成功')
        this.handleModalVisible(false)
        this.requestList()
      },
    })
  }

  /**
   *@Features:编辑
   */
  handleEdit = async (id) => {
    // console.log(id)
    const { dispatch } = this.props
    const rowItem = await dispatch({
      type: 'mainlyProtectedSpecies/fetchDetail',
      payload: { id },
    })
    this.handleModalVisible(true, 'edit', rowItem)
  }

  /**
   *@Features:删除
   */
  handleDelete = (id) => {
    const self = this
    const { dispatch } = this.props
    Modal.confirm({
      title: '确定要删除这个数据吗？',
      content: '删除后，无法恢复。',
      okType: 'danger',
      okText: '删除',
      cancelText: '取消',
      onOk() {
        dispatch({
          type: 'mainlyProtectedSpecies/remove',
          payload: {
            id,
          },
          callback: () => {
            message.success('删除成功')
            self.requestList()
          },
        })
      },
    })
  }

  // 查看详情
  handleView = async (id) => {
    const { dispatch } = this.props
    const rowItem = await dispatch({
      type: 'mainlyProtectedSpecies/fetchDetail',
      payload: { id },
    })
    // console.log(rowItem)
    this.handleModalVisible(true, 'view', rowItem, 'viewModal')
  }


  render() {
    const { selectedRows, modal, viewModal } = this.state
    const {
      selectedMode, listLoading, submitLoading,
      mainlyProtectedSpecies: { data, chinaProtectLevel, iucnRank },
      addBtnLoading,
    } = this.props

    return (
      <div>
        <Layout>
          <Card bordered={false} style={{ marginBottom: 20 }}>
            <Filter
              onSearch={this.handleSearch}
              resetForm={this.handleFormReset}
            />
          </Card>
          <Card bordered={false}>
            <div>
              <span>共有<b>{data.pagination.total}</b>条信息，共<b>{Math.ceil(data.pagination.total / data.pagination.pageSize) || 0}</b>页</span>
              <Button
                icon="plus"
                className={globalStyles.button}
                onClick={() => this.handleModalVisible(true)}
                style={{ background: '#ee9800', color: '#fff', float: 'right', marginBottom: 20 }}
              >
                添加物种信息
              </Button>
              {/*<Button*/}
                {/*type="primary"*/}
                {/*style={{ float: 'right', marginBottom: 20, marginRight: 20 }}*/}
              {/*>*/}
                {/*信息同步*/}
              {/*</Button>*/}
            </div>
            <TableList
              selectedMode={null}
              selectedRows={false}
              rowSelection={null}
              loading={listLoading}
              data={data}
              // onSelectRow={this.handleSelectRows}
              onChange={this.handleStandardTableChange}
              onDelete={this.handleDelete}
              onEdit={this.handleEdit}
              onView={this.handleView}
            />
          </Card>
        </Layout>

        <FormComp // 新建&编辑Modal
          title={modal.modalType === 'new' ? '物种信息新增' : '物种信息编辑'}
          {...modal}
          loading={submitLoading}
          chinaProtectLevel={chinaProtectLevel}
          iucnRank={iucnRank}
          onCancelClick={() => this.handleModalVisible(false)}
          submitForm={this.handleFormSubmit}
          addBtnLoading={addBtnLoading}
        />

        <View // 新建&编辑Modal
          title='物种信息查看'
          {...viewModal}
          loading={submitLoading}
          onCancelClick={() => this.handleModalVisible(false, 'view', {}, 'viewModal')}
          submitForm={this.handleFormSubmit}
        />
      </div>)
  }
}

export default MainlyProtectedSpecies