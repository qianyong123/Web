import React, { PureComponent, Fragment, useState } from 'react'
import { Dropdown, Menu, Divider, Button, Popover, Icon, Checkbox, Tag, Tooltip, Switch } from 'antd'
import moment from 'moment'
import { CopyToClipboard } from 'react-copy-to-clipboard'
import tableStyles from '@/styles/table.less'

import Authorized from '@/utils/Authorized'
import StandardTable from '@/components/StandardTable'
import globalStyles from '@/global.less'

const userStatusValue = { 1: '启用', 2: '停用' }

class TableList extends PureComponent {
  state = {
    columnKeys: [
      'year',
      'animalName',
      'type',
      'animalNumber',
      'riskGrade',
    ],
  }

  handleColumnsChange = values => {
    this.setState({
      columnKeys: values,
    })
  }

  renderColumns = (columns = []) => {
    const { onView, onPass, onBack, selectedMode } = this.props
    const { columnKeys } = this.state
    const columnsSetting = (
      <Checkbox.Group
        value={columnKeys}
        options={columns
          .filter(item => !selectedMode || (selectedMode && item.enableInSelectMode))
          .map(column => ({
            label: column.title,
            value: column.key,
          }))}
        onChange={this.handleColumnsChange}
      />
    )
    const firstColumn = {
      title: '序号',
      key: 'number',
      className: 'no-wrap text-center plus-btn',
      fixed: 'left',
      width: 50,
      align: 'center',
      // enableInSelectMode: true,
      render: (text, record, index) => index + 1,
    }
    // const lastColumn = {
    //   title: '操作',
    //   key: 'actions',
    //   align: 'center',
    //   width: 130,
    //   className: globalStyles.tableActions,
    //   fixed: 'right',
    //   render: (text, record) => (
    //     record.checkStatus == '3' ? null : <Fragment>
    //       <Dropdown
    //         overlay={
    //           <Menu>
    //             <Menu.Item onClick={() => onPass([record.id])}>
    //               <Icon type="check-circle" style={{ color: '#03B472' }} />
    //                 编辑
    //               </Menu.Item>
    //             <Menu.Item onClick={() => onBack(record.id)}>
    //               <Icon type="sync" style={{ color: '#ee9800' }} />
    //               删除
    //             </Menu.Item>
    //           </Menu>
    //         }
    //       >
    //         <Button type="link" size="small">
    //           操作
    //             <Icon type="down" />
    //         </Button>
    //       </Dropdown>
    //     </Fragment>
    //   ),
    // }

    return [
      firstColumn,
      ...columns.filter(column => columnKeys.indexOf(column.key) > -1),
      // lastColumn,
    ].filter(item => !selectedMode || (selectedMode && item.enableInSelectMode))
  }

  render() {
    const {
      selectedMode,
      selectedRows,
      rowSelection,
      data,
      loading,
      onSelectRow,
      onPass,
      onChange,
      onSwitch,
    } = this.props
    const columns = [
      {
        title: '年份',
        dataIndex: 'year',
        key: 'year',
        align: 'center',
      },
      {
        title: '物种名称',
        dataIndex: 'animalName',
        key: 'animalName',
        align: 'center',
      },
      {
        title: '指标分类',
        dataIndex: 'type',
        key: 'type',
        align: 'center',
      },
      {
        title: '物种数量',
        dataIndex: 'animalNumber',
        key: 'animalNumber',
        align: 'center',
      },
      {
        title: '评价结果',
        dataIndex: 'riskGrade',
        key: 'riskGrade',
        align: 'center',
      },
    ]

    const dataSource = {
      ...data,
      list: data.list.map(item => ({
        ...item,
        key: item.id,
      })),
    }

    return (
      <StandardTable
        hideSelectedCount
        selectedMode={selectedMode}
        selectedRows={selectedRows}
        rowSelection={rowSelection}
        scroll={{ x: 'max-content' }}
        loading={loading}
        data={dataSource}
        columns={this.renderColumns(columns)}
        onSelectRow={onSelectRow}
        onPass={onPass}
        onChange={onChange}
      />
    )
  }
}

export default TableList
