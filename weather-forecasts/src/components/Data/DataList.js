const DateList = [
  {
    id:'1',
    type:"Git",
    time:"2020-09-07",
    classify:'rest',
    title:"Git的常用命令",
    text:`
    <p><span style="color:#c0392b"><span style="font-size:20px"><strong># git初始化仓库</strong></span></span></p><p></p><pre class="prettyprint"><code>git init<br/><br/><span style="font-size:18px">配置用户名和邮箱</span><br/><br/>git config --global user.name &quot;name&quot;<br/>git config --global user.email &quot;email&quot;</code></pre><p></p><p>版本管理<br/></p><div class="media-wrap image-wrap align-center" style="text-align:center"><img class="media-wrap image-wrap align-center" alt="图片" src="http://www.zzfly.net/wp-content/uploads/2018/10/git.jpg" height="auto" style="height:auto"/></div><p style="text-align:start;text-indent:2em;"><br/><br/>– git status当前状态<br/>– git diff文件查看区别<br/>– git log查看历史记录详细<br/>– git log –pretty = oneline查看历史记录简洁<br/>– git reset –hard <em>HEAD ^</em>回滚上一个版本<br/>– git reflog查看执行过的操作<br/>– git checkout — <em>文件</em>更改工作区的修改（暂存区/版本库回来）<br/>– git reset HEAD <em>文件</em>暂存区返回工作区<br/>– git rm <em>文件</em>删除文件（没啥用）<br/>git add命令实际上就是把要提交的所有修改放到暂存区（Stage），然后，执行git commit就可以一次性把暂存区的所有修改提交到分支。</p><p><br/><span style="color:#c0392b"><strong><span style="font-size:20px"># 远程仓库</span></strong></span></p><ul><li>git remote add origin git @ ****添加远程仓库</li><li>git push -u origin <em>master</em>将本地主机与远程master相关联并推</li><li>git clone git @ ****克隆远程仓库<br/></li></ul><p><span style="font-size:20px"><span style="color:#c0392b"><strong># 分支管理</strong></span></span></p><ul><li>git checkout -b <em>分支</em>创建分支</li><li>git branch查看当前分支</li><li>git checkout <em>branch</em>切换分支</li></ul><p>git checkout命令加上-b参数表示创建并切换，相当于以下两条命令：git branch &amp;&amp; git checkout<br/><br/></p><ul><li>git merge <em>分支</em>合并分支到当前分支</li><li>git merge –no-ff -m <em>commit_message</em> <em>分支</em>另外，快进合并（保留之前分支数据）</li><li>git的分支-d <em>分支</em>删除分支</li><li>git branch -D <em>branch</em>强制删除分支</li><li>git push origin – 删除<em>分支</em>删除远程分支</li></ul><p>Bug分支主要流程：用于在其他分支工作时紧急修复master分支的bug<br/></p><ul><li>git stash储存工作现场</li><li>git checkout <em>master</em>返回主分支</li><li>git checkout -b <em>issue-101</em>建立Bug分支</li><li>git checkout <em>master</em>完成修复后回到主分支</li><li>git merge –no-ff -m <em>“合并的bug修复101”</em> <em>问题-101</em>部分快进合并</li><li>git branch -d <em>问题-101</em>删除错误分支</li><li>git stash list查看工作现场</li><li>git stash apply恢复工作现场</li><li>git stash drop删除工作现场</li><li>git stash pop恢复工作现场并删除</li></ul>
    `,
  },
  {
    id:'2',
    type:"HtmlCss",
    time:"2020-09-07",
    classify:'css',
    title:"Css实现元素垂直居中显示的7种方式",
    text:`
      <p></p><h2 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong><span style="color:#dd4a68"># 知道居中元素的宽高</span></strong></h2><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>absolute + 负margin</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox5</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">border</span><span style="color:#999999">:</span></span>1px solid red<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> relative<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem5</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> absolute<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>yellow<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">top</span><span style="color:#999999">:</span></span> 50%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">left</span><span style="color:#999999">:</span></span>50%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">margin-top</span><span style="color:#999999">:</span></span> -25px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">margin-left</span><span style="color:#999999">:</span></span> -50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>运行结果</strong><br/></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/20190506170449655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>absolute + margin auto</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span> yellow<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> relative<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>green<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">display</span><span style="color:#999999">:</span></span> inline-block<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> absolute<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">top</span><span style="color:#999999">:</span></span> 0px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">bottom</span><span style="color:#999999">:</span></span>0px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">left</span><span style="color:#999999">:</span></span> 0px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">right</span><span style="color:#999999">:</span></span> 0px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">margin</span><span style="color:#999999">:</span></span>auto<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/20190506170500316.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><h3></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>absolute + calc</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox6</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">border</span><span style="color:#999999">:</span></span>1px solid green<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> relative<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem6</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> absolute<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>yellow<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">top</span><span style="color:#999999">:</span></span> <span style="font-size:14px"><span style="color:#dd4a68">calc</span><span style="color:#999999">(</span></span>50% - 25px<span style="font-size:14px"><span style="color:#999999">);</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">left</span><span style="color:#999999">:</span><span style="color:#dd4a68">calc</span><span style="color:#999999">(</span></span>50% - 50px<span style="font-size:14px"><span style="color:#999999">);</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><br/></code></pre><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>运行结果</strong><br/></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/201905061705093.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>三种对比总结</strong></p><blockquote style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false">当居中元素知道宽高的时候，设置居中的方式比较简单单一。三种方法的本质是一样的，都是对居中元素进行绝对定位，在定位到上50%，左50%后再拉回居中元素的一半宽高实现真正的居中。三种方式的区别就在于拉回元素本身宽高的方式不同。</blockquote><hr/><h2 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong><span style="color:#dd4a68"># 居中元素的宽高未知</span></strong></h2><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>absolute + transform</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>#ddd<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> relative<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>green<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">position</span><span style="color:#999999">:</span></span> absolute<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">top</span><span style="color:#999999">:</span></span> 50%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">left</span><span style="color:#999999">:</span></span>50%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">transform</span><span style="color:#999999">:</span></span> <span style="font-size:14px"><span style="color:#dd4a68">translate</span><span style="color:#999999">(</span></span>-50% , -50%<span style="font-size:14px"><span style="color:#999999">);</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p><strong>运行结果</strong></p><p></p><div class="media-wrap image-wrap align-start" style="text-align:start"><img class="media-wrap image-wrap align-start" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/20190506170524240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><p src="https://img-blog.csdnimg.cn/20190506170524240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>原理</strong><br/>原理类似于已知宽高的实现方式，只不过当前居中元素宽高未知，所以需要自动获取当前居中元素的宽高。translate属性正好实现了该功能。</p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>优缺点</strong><br/>优点：自动计算本身的宽高<br/>缺点：如果同时使用transform的其他属性会产生相互影响。<br/>所以：在不使用transform的其他属性时推荐使用该方式</p><p></p><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>flex布局</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox2</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span> blue<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">display</span><span style="color:#999999">:</span></span> flex<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">justify-content</span><span style="color:#999999">:</span></span> center<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">align-items</span><span style="color:#999999">:</span></span> center<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><em><span style="color:#708090">/*注意：即使不设置子元素为行块元素也不会独占一层*/</span></em></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem2</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>green<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>运行结果</strong><br/></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/20190506170534464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>原理</strong><br/>将父级元素设置为流式布局，根据flex布局的属性特性，设置子元素居中。</p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>优缺点</strong><br/>优点：flex布局灵活，不需要对子元素进行任何的设置<br/>缺点：具有兼容性。子元素的float、clear、position等无法使用，如果同时具有其他布局，容易产生影响。</p><p></p><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>table-cell布局</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.wrapBox3</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span> yellow<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">display</span><span style="color:#999999">:</span></span> table-cell<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">vertical-align</span><span style="color:#999999">:</span></span> middle<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">text-align</span><span style="color:#999999">:</span></span> center<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.wrapItem3</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 100px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 50px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>green<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">display</span><span style="color:#999999">:</span></span> inline-block<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>运行结果</strong><br/></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/2019050617054562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>原理</strong><br/>根据table的vertical-align属性，可以在表格元素内设置元素居中，再根据text-align设置水平居中</p><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>table元素</strong></h3><h3 style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>代码实现</strong></h3><pre class="prettyprint"><code><span style="font-size:14px"><span style="color:#50a14f">.tableBox</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">border</span><span style="color:#999999">:</span></span>2px solid yellow<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span> 300px<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.tableBox table</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">width</span><span style="color:#999999">:</span></span>100%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">height</span><span style="color:#999999">:</span></span>100%<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.centerWrap</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">text-align</span><span style="color:#999999">:</span></span> center<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">vertical-align</span><span style="color:#999999">:</span></span> middle<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/><span style="font-size:14px"><span style="color:#50a14f">.centerItem</span><span style="color:#999999">{</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">display</span><span style="color:#999999">:</span></span> inline-block<span style="font-size:14px"><span style="color:#999999">;</span></span><br/>    <span style="font-size:14px"><span style="color:#986801">background</span><span style="color:#999999">:</span></span>pink<span style="font-size:14px"><span style="color:#999999">;</span></span><br/><span style="font-size:14px"><span style="color:#999999">}</span></span><br/></code></pre><p></p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false"><strong>运行结果</strong><br/></p><div class="media-wrap image-wrap"><img class="media-wrap image-wrap" alt="在这里插入图片描述" src="https://img-blog.csdnimg.cn/20190506170556745.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MTMwNTQ0MQ==,size_16,color_FFFFFF,t_70"/></div><p><br/><strong>总结</strong><br/>使用table标签进行布局，主要还是使用了vertical-align属性和text-align属性。但是相对于上一种方式，使用table标签会产生大量的冗余代码。不推荐使用</p>
    `,
  },
  {
    id:'3',
    type:"JavaScript",
    time:"2020-09-07",
    classify:'js',
    title:"浅谈JavaScript深拷贝和浅拷贝",
    text:`
   <p><br/><strong><span style="font-size:20px"><span style="color:#c0392b"># 数据类型</span></span></strong></p><p><br/><span style="color:#333333">js里面的数据类型有基本数据类型和引用数据类型。</span><br/><span style="color:#333333">基本数据类型：Undefined、Null、Boolean、Number和String</span><br/><span style="color:#333333">引用类型：Object、Array</span><br/><br/><strong><span style="font-size:20px"><span style="color:#c0392b"># 基本类型的存储</span></span></strong><br/><br/><span style="color:#333333">基本数据类型的值存在栈里面，并且值与值之间独立存在，修改一个值，不会影响其他的值</span><br/><br/><strong><span style="font-size:20px"><span style="color:#c0392b"># 引用数据类型存储</span></span></strong><br/></p><ul><li><span style="color:#333333">对象保存在堆内存中。</span></li><li><span style="color:#333333">每创建一个新的对象就会在堆内存开辟一个新的空间。</span></li><li><span style="color:#333333">变量保存的是内存地址(对象引用)。</span></li><li><span style="color:#333333">两个变量保存同一个引用,一个变量修改属性时,另一个变量属性值也会变化。</span></li><li><span style="color:#333333">引用数据类型在栈中存储了指针，该指针指向堆中该实体的起始地址。当解释器寻找引用值时，会首先检索其在栈中的地址，取得地址后从堆中获得实体。</span></li><li><span style="color:#333333">浅拷贝和深拷贝主要是对引用数据类型的。</span></li></ul><p><br/><span style="font-size:20px"><span style="color:#c0392b"><strong> # 浅拷贝实现的方法</strong></span></span><br/><br/><span style="color:#333333">Object.assign()</span></p><p></p><pre><code><span style="font-size:16px"> <span style="color:#569cd6">var</span> <span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4"> = { </span><span style="color:#9cdcfe">a:</span> <span style="color:#b5cea8">1</span><span style="color:#d4d4d4">, </span><span style="color:#9cdcfe">arr:</span><span style="color:#d4d4d4"> [</span><span style="color:#b5cea8">2</span><span style="color:#d4d4d4">, </span><span style="color:#b5cea8">3</span><span style="color:#d4d4d4">] };</span></span><br/><span style="font-size:16px"> <span style="color:#569cd6">var</span> <span style="color:#9cdcfe">obj2</span><span style="color:#d4d4d4"> = </span><span style="color:#4ec9b0">Object</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">assign</span><span style="color:#d4d4d4">({}, </span><span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4">)</span></span><br/><span style="font-size:16px"> <span style="color:#9cdcfe">console</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">log</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">obj2</span><span style="color:#d4d4d4">) </span><span style="color:#6a9955">//{ a:1, arr: [2,3] }</span></span><br/><span style="font-size:16px"> <span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4">.</span><span style="color:#9cdcfe">a</span><span style="color:#d4d4d4"> = </span><span style="color:#b5cea8">66</span></span><br/><span style="font-size:16px"> <span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4">.</span><span style="color:#9cdcfe">arr</span><span style="color:#d4d4d4">[</span><span style="color:#b5cea8">0</span><span style="color:#d4d4d4">] = </span><span style="color:#b5cea8">66</span></span><br/><span style="font-size:16px"> <span style="color:#9cdcfe">console</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">log</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">obj2</span><span style="color:#d4d4d4">) </span><span style="color:#6a9955">//{ a:1, arr: [66,3] }</span></span></code></pre><p><br/><span style="color:#333333">Object.assign()方法可以将任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。但是该方法拷贝的时候是浅拷贝，拷贝的是对象的属性的引用，并不是对象本身。（注意：当object只有一层的时候，就是浅拷贝）</span><br/><br/><span style="color:#333333">Array.prototype.concat()</span><br/><span style="color:#333333">Array.prototype.slice()</span><br/><span style="color:#333333">es6扩展运算符 ...</span><br/><br/><strong><span style="font-size:20px"><span style="color:#c0392b"># 深拷贝的实现方法</span></span></strong><br/><br/><span style="color:#333333">JSON.parse(JSON.stringify()), 这个有缺点，不能复制funtion</span><br/><span style="color:#333333">递归的形式遍历每一项值，一直遍历到每项值都是基本数据类型为止。</span><br/><br/><br/><span style="color:#333333">定义检测数据类型的功能函数</span><br/></p><pre><code><span style="color:#569cd6">function</span> <span style="color:#dcdcaa">isObject</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4">) {</span><br/> <span style="color:#c586c0">return</span> <span style="color:#569cd6">typeof</span> <span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4"> === </span><span style="color:#ce9178">&#x27;object&#x27;</span><span style="color:#d4d4d4"> &amp;&amp; </span><span style="color:#9cdcfe">obj</span><span style="color:#d4d4d4"> != </span><span style="color:#569cd6">null</span><span style="color:#d4d4d4">;</span><br/><span style="color:#d4d4d4">  }</span><br/> <span style="color:#569cd6">function</span> <span style="color:#dcdcaa">cloneDeep</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">) {</span><br/><br/> <span style="color:#c586c0">if</span><span style="color:#d4d4d4"> (!</span><span style="color:#dcdcaa">isObject</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">)) </span><span style="color:#c586c0">return</span> <span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">; </span><span style="color:#6a9955">// 非对象返回自身</span><br/><br/> <span style="color:#569cd6">var</span> <span style="color:#9cdcfe">target</span><span style="color:#d4d4d4"> = </span><span style="color:#4ec9b0">Array</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">isArray</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">) ? [] : {};</span><br/> <span style="color:#c586c0">for</span><span style="color:#d4d4d4"> (</span><span style="color:#569cd6">var</span> <span style="color:#9cdcfe">key</span> <span style="color:#569cd6">in</span> <span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">) {</span><br/> <span style="color:#c586c0">if</span><span style="color:#d4d4d4"> (</span><span style="color:#4ec9b0">Object</span><span style="color:#d4d4d4">.</span><span style="color:#4fc1ff">prototype</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">hasOwnProperty</span><span style="color:#d4d4d4">.</span><span style="color:#dcdcaa">call</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">, </span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">)) {</span><br/> <span style="color:#c586c0">if</span><span style="color:#d4d4d4"> (</span><span style="color:#dcdcaa">isObject</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">[</span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">])) {</span><br/> <span style="color:#9cdcfe">target</span><span style="color:#d4d4d4">[</span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">] = </span><span style="color:#dcdcaa">cloneDeep</span><span style="color:#d4d4d4">(</span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">[</span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">]); </span><span style="color:#6a9955">// 注意这里</span><br/><span style="color:#d4d4d4">        } </span><span style="color:#c586c0">else</span><span style="color:#d4d4d4"> {</span><br/> <span style="color:#9cdcfe">target</span><span style="color:#d4d4d4">[</span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">] = </span><span style="color:#9cdcfe">source</span><span style="color:#d4d4d4">[</span><span style="color:#9cdcfe">key</span><span style="color:#d4d4d4">];</span><br/><span style="color:#d4d4d4">        }</span><br/><span style="color:#d4d4d4">      }</span><br/><span style="color:#d4d4d4">    }</span><br/> <span style="color:#c586c0">return</span> <span style="color:#9cdcfe">target</span><span style="color:#d4d4d4">;</span><br/><span style="color:#d4d4d4">}</span><br/></code></pre>

    `,
  },
  {
    id:'4',
    type:"Linux",
    time:"2020-09-08",
    classify:'rest',
    title:"Linux和Nginx 常用操作命令",
    text:`
    <h2 style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="color:#c0392b"><strong># Nginx命令</strong></span></h2><p><span style="font-size:16px"><span style="line-height:2">查看版本：nginx -v</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">查看nginx安装目录：ps  -ef | grep nginx</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">检查配置文件：nginx -t</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">启动：systemctl start nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">停止：systemctl stop nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">重启：systemctl restart nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">设置开机自启动：systemctl enable nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">停止开机自启动：systemctl disable nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">查看当前状态：systemctl status nginx.service</span></span></p><p style="text-align:justify;" size="0" _root="undefined" __ownerID="undefined" __hash="undefined" __altered="false"><span style="font-size:16px"><span style="line-height:2">查看所有已启动的服务：systemctl list-units --type=service</span></span></p><h2></h2><h2><span style="color:#c0392b"><strong># 系统信息 </strong></span></h2><h1><span style="font-size:16px"><br/>arch 显示机器的处理器架构<br/>uname -m 显示机器的处理器架构<br/>uname -r 显示正在使用的内核版本 <br/>dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI) <br/>hdparm -i /dev/hda 罗列一个磁盘的架构特性 <br/>hdparm -tT /dev/sda 在磁盘上执行测试性读取操作 <br/>cat /proc/cpuinfo 显示CPU info的信息 <br/>cat /proc/interrupts 显示中断 <br/>cat /proc/meminfo 校验内存使用 <br/>cat /proc/swaps 显示哪些swap被使用 <br/>cat /proc/version 显示内核的版本 <br/>cat /proc/net/dev 显示网络适配器及统计 <br/>cat /proc/mounts 显示已加载的文件系统 <br/>lspci -tv 罗列 PCI 设备 <br/>lsusb -tv 显示 USB 设备 <br/>date 显示系统日期 <br/>cal 2007 显示2007年的日历表 <br/>date 041217002007.00 设置日期和时间 - 月日时分年.秒 <br/>clock -w 将时间修改保存到 BIOS </span><br/><br/><span style="color:#c0392b"><strong># 关机 (系统的关机、重启以及登出 ) </strong></span></h1><h2><br/><span style="font-size:16px">shutdown -h now 关闭系统<br/>init 0 关闭系统<br/>telinit 0 关闭系统<br/>shutdown -h hours:minutes &amp; 按预定时间关闭系统 <br/>shutdown -c 取消按预定时间关闭系统 <br/>shutdown -r now 重启<br/>reboot 重启<br/>logout 注销 </span><br/><span style="color:#c0392b"><strong><br/># 文件和目录 </strong></span></h2><p><br/>cd /home 进入 &#x27;/ home&#x27; 目录&#x27; <br/>cd .. 返回上一级目录 <br/>cd ../.. 返回上两级目录 <br/>cd 进入个人的主目录 <br/>cd ~user1 进入个人的主目录 <br/>cd - 返回上次所在的目录 <br/>pwd 显示工作路径 <br/>ls 查看目录中的文件 <br/>ls -F 查看目录中的文件 <br/>ls -l 显示文件和目录的详细资料 <br/>ls -a 显示隐藏文件 <br/>ls *[0-9]* 显示包含数字的文件名和目录名 <br/>tree 显示文件和目录由根目录开始的树形结构<br/>lstree 显示文件和目录由根目录开始的树形结构<br/>mkdir dir1 创建一个叫做 &#x27;dir1&#x27; 的目录&#x27; <br/>mkdir dir1 dir2 同时创建两个目录 <br/>mkdir -p /tmp/dir1/dir2 创建一个目录树 <br/>rm -f file1 删除一个叫做 &#x27;file1&#x27; 的文件&#x27; <br/>rmdir dir1 删除一个叫做 &#x27;dir1&#x27; 的目录&#x27; <br/>rm -rf dir1 删除一个叫做 &#x27;dir1&#x27; 的目录并同时删除其内容 <br/>rm -rf dir1 dir2 同时删除两个目录及它们的内容 <br/>mv dir1 new_dir 重命名/移动 一个目录 <br/>cp file1 file2 复制一个文件 <br/>cp dir/* . 复制一个目录下的所有文件到当前工作目录 <br/>cp -a /tmp/dir1 . 复制一个目录到当前工作目录 <br/>cp -a dir1 dir2 复制一个目录 </p><p style="text-align:start;" size="0" _root="undefined" __ownerid="undefined" __hash="undefined" __altered="false">cp -r dir1 dir2 复制一个目录及子目录<br/>ln -s file1 lnk1 创建一个指向文件或目录的软链接 <br/>ln file1 lnk1 创建一个指向文件或目录的物理链接 <br/>touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm) <br/>file file1 outputs the mime type of the file as text <br/>iconv -l 列出已知的编码 <br/>iconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding. <br/>find . -maxdepth 1 -name *.jpg -print -exec convert &quot;{}&quot; -resize 80x60 &quot;thumbs/{}&quot; ; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick) </p>
    `,
  },
]

export default DateList